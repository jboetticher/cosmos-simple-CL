syntax = "proto3";
package jboetticher.simpleclcosmos.clprice;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/jboetticher/simpleclcosmos/x/clprice/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc SendIbcPrice(MsgSendIbcPrice) returns (MsgSendIbcPriceResponse);
  rpc CreateSentPrice(MsgCreateSentPrice) returns (MsgCreateSentPriceResponse);
  rpc UpdateSentPrice(MsgUpdateSentPrice) returns (MsgUpdateSentPriceResponse);
  rpc DeleteSentPrice(MsgDeleteSentPrice) returns (MsgDeleteSentPriceResponse);
  rpc CreatePrice(MsgCreatePrice) returns (MsgCreatePriceResponse);
  rpc UpdatePrice(MsgUpdatePrice) returns (MsgUpdatePriceResponse);
  rpc DeletePrice(MsgDeletePrice) returns (MsgDeletePriceResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgSendIbcPrice {
  string sender = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
  string name = 5;
  int32 price = 6;
  int32 date = 7;
}

message MsgSendIbcPriceResponse {
}

message MsgCreateSentPrice {
  string creator = 1;
  string priceID = 2;
  string name = 3;
  string chain = 4;
}

message MsgCreateSentPriceResponse {
  uint64 id = 1;
}

message MsgUpdateSentPrice {
  string creator = 1;
  uint64 id = 2;
  string priceID = 3;
  string name = 4;
  string chain = 5;
}

message MsgUpdateSentPriceResponse { }

message MsgDeleteSentPrice {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteSentPriceResponse { }

message MsgCreatePrice {
  string creator = 1;
  string name = 2;
  int32 price = 3;
  int32 date = 4;
}

message MsgCreatePriceResponse {
  uint64 id = 1;
}

message MsgUpdatePrice {
  string creator = 1;
  uint64 id = 2;
  string name = 3;
  int32 price = 4;
  int32 date = 5;
}

message MsgUpdatePriceResponse { }

message MsgDeletePrice {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeletePriceResponse { }
